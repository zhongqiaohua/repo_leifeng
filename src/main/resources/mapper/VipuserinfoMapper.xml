<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.leifeng.dao.VipuserinfoMapper">
  <resultMap id="BaseResultMap" type="com.example.leifeng.models.Vipuserinfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="passWord" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="account" jdbcType="INTEGER" property="account" />
    <result column="serialNo" jdbcType="INTEGER" property="serialno" />
    <result column="isVip" jdbcType="VARCHAR" property="isvip" />
    <result column="payTime" jdbcType="VARCHAR" property="paytime" />
    <result column="allChargeMoney" jdbcType="INTEGER" property="allchargemoney" />
    <result column="updateUseridSms" jdbcType="VARCHAR" property="updateuseridsms" />
    <result column="updateUseridSmsTime" jdbcType="VARCHAR" property="updateuseridsmstime" />
    <result column="updateUserid" jdbcType="INTEGER" property="updateuserid" />
    <result column="registerTime" jdbcType="VARCHAR" property="registertime" />
    <result column="payDeviceId" jdbcType="INTEGER" property="paydeviceid" />
    <result column="gzgzh" jdbcType="INTEGER" property="gzgzh" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userid, userName, openid, passWord, email, account, serialNo, isVip, payTime,
    allChargeMoney, updateUseridSms, updateUseridSmsTime, updateUserid, registerTime,
    payDeviceId, gzgzh
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from VipUserInfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from VipUserInfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.leifeng.models.Vipuserinfo">
    insert into VipUserInfo (id, userid, userName,
      openid, passWord, email,
      account, serialNo, isVip,
      payTime, allChargeMoney, updateUseridSms,
      updateUseridSmsTime, updateUserid, registerTime,
      payDeviceId, gzgzh)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
      #{openid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
      #{account,jdbcType=INTEGER}, #{serialno,jdbcType=INTEGER}, #{isvip,jdbcType=VARCHAR},
      #{paytime,jdbcType=VARCHAR}, #{allchargemoney,jdbcType=INTEGER}, #{updateuseridsms,jdbcType=VARCHAR},
      #{updateuseridsmstime,jdbcType=VARCHAR}, #{updateuserid,jdbcType=INTEGER}, #{registertime,jdbcType=VARCHAR},
      #{paydeviceid,jdbcType=INTEGER}, #{gzgzh,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.leifeng.models.Vipuserinfo">
    insert into VipUserInfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="password != null">
        passWord,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="serialno != null">
        serialNo,
      </if>
      <if test="isvip != null">
        isVip,
      </if>
      <if test="paytime != null">
        payTime,
      </if>
      <if test="allchargemoney != null">
        allChargeMoney,
      </if>
      <if test="updateuseridsms != null">
        updateUseridSms,
      </if>
      <if test="updateuseridsmstime != null">
        updateUseridSmsTime,
      </if>
      <if test="updateuserid != null">
        updateUserid,
      </if>
      <if test="registertime != null">
        registerTime,
      </if>
      <if test="paydeviceid != null">
        payDeviceId,
      </if>
      <if test="gzgzh != null">
        gzgzh,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=INTEGER},
      </if>
      <if test="serialno != null">
        #{serialno,jdbcType=INTEGER},
      </if>
      <if test="isvip != null">
        #{isvip,jdbcType=VARCHAR},
      </if>
      <if test="paytime != null">
        #{paytime,jdbcType=VARCHAR},
      </if>
      <if test="allchargemoney != null">
        #{allchargemoney,jdbcType=INTEGER},
      </if>
      <if test="updateuseridsms != null">
        #{updateuseridsms,jdbcType=VARCHAR},
      </if>
      <if test="updateuseridsmstime != null">
        #{updateuseridsmstime,jdbcType=VARCHAR},
      </if>
      <if test="updateuserid != null">
        #{updateuserid,jdbcType=INTEGER},
      </if>
      <if test="registertime != null">
        #{registertime,jdbcType=VARCHAR},
      </if>
      <if test="paydeviceid != null">
        #{paydeviceid,jdbcType=INTEGER},
      </if>
      <if test="gzgzh != null">
        #{gzgzh,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.leifeng.models.Vipuserinfo">
    update VipUserInfo
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        passWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=INTEGER},
      </if>
      <if test="serialno != null">
        serialNo = #{serialno,jdbcType=INTEGER},
      </if>
      <if test="isvip != null">
        isVip = #{isvip,jdbcType=VARCHAR},
      </if>
      <if test="paytime != null">
        payTime = #{paytime,jdbcType=VARCHAR},
      </if>
      <if test="allchargemoney != null">
        allChargeMoney = #{allchargemoney,jdbcType=INTEGER},
      </if>
      <if test="updateuseridsms != null">
        updateUseridSms = #{updateuseridsms,jdbcType=VARCHAR},
      </if>
      <if test="updateuseridsmstime != null">
        updateUseridSmsTime = #{updateuseridsmstime,jdbcType=VARCHAR},
      </if>
      <if test="updateuserid != null">
        updateUserid = #{updateuserid,jdbcType=INTEGER},
      </if>
      <if test="registertime != null">
        registerTime = #{registertime,jdbcType=VARCHAR},
      </if>
      <if test="paydeviceid != null">
        payDeviceId = #{paydeviceid,jdbcType=INTEGER},
      </if>
      <if test="gzgzh != null">
        gzgzh = #{gzgzh,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.leifeng.models.Vipuserinfo">
    update VipUserInfo
    set userid = #{userid,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      passWord = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      account = #{account,jdbcType=INTEGER},
      serialNo = #{serialno,jdbcType=INTEGER},
      isVip = #{isvip,jdbcType=VARCHAR},
      payTime = #{paytime,jdbcType=VARCHAR},
      allChargeMoney = #{allchargemoney,jdbcType=INTEGER},
      updateUseridSms = #{updateuseridsms,jdbcType=VARCHAR},
      updateUseridSmsTime = #{updateuseridsmstime,jdbcType=VARCHAR},
      updateUserid = #{updateuserid,jdbcType=INTEGER},
      registerTime = #{registertime,jdbcType=VARCHAR},
      payDeviceId = #{paydeviceid,jdbcType=INTEGER},
      gzgzh = #{gzgzh,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>